@model IEnumerable<ProjectFUEN.Models.EFModels.OrderDetail>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common



@{
	ViewData["Title"] = "Index";
	var pagedList = (IPagedList)ViewBag.OrderDetail;
	var state = ViewBag.state as IEnumerable<SelectListItem>;



}





<div class="col-10 mb-5 mt-5 ">
	
	<div class="caption align-items-xl-center ">
		
		<div class="row list-group-horizontal ">

			
			@using (Html.BeginForm("Search", "OrderDetails", FormMethod.Get))
			{

				<div class=" input-group col-12 align-items-center justify-content-center">		
					<h3>訂單管理</h3>
					<div class="input-group justify-content-center d-flex ">
						<span class="justify-content-center"></span>
						<div class="col-2">@Html.DropDownList("State", (IEnumerable<SelectListItem>)ViewBag.SelectList, new { @class = "order-state form-control" })</div>
						<input type="text" name="account" class="col-2 ms-3 " value="" id="Searchtext" placeholder="請輸入.." />
						<button type="submit" class="btn btn-dark SearchClick" value="" id="SearchClick">
							<i class="fa-solid fa-magnifying-glass "></i>
						</button>
					</div>

				</div>
			}





		</div>

	</div>
</div>

<table class="table col-10">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Member.RealName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Member.EmailAccount)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.OrderDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Address)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.State)
			</th>

			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Member.RealName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Member.EmailAccount)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.OrderDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Address)
				</td>
				<td>
					@GetStateName(item.State)
				</td>

				<td>
					<a id="FunBtn" class="FunBtn text-dark" href="OrderDetails/Edit/@item.Id" data-fancybox data-type="iframe" class="fc1">
						<i class=" fa-solid fa-pen-to-square"></i>
					</a> |
					<a id="FunBtn" class="FunBtn text-dark" asp-controller="OrderItems" asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i></a> |
					@*                    <a id="FunBtn" class="deleteOrder FunBtn text-dark" asp-action="Delete" asp-route-id="@item.Id"><i  class="fa-solid fa-trash"></i></a>
				*@                    <a class="deleteOrder FunBtn text-dark" id="@item.Id" style="cursor:pointer"><i class="fa-solid fa-trash"></i></a>

				</td>
			</tr>
		}
	</tbody>



</table>


<div class="text-muted mx-auto">
	<div class="align-items-center mx-auto w-50 ">
		@Html.PagedListPager((IPagedList)pagedList, page =>
		Url.Action("Index", new { page = page }),

		new PagedListRenderOptions {

		LiElementClasses = new string[] { "page-item" },
		PageClasses = new string[] { "page-link" },

		LinkToFirstPageFormat="<<第一頁",
		LinkToPreviousPageFormat="<",
		LinkToNextPageFormat=">",
		LinkToLastPageFormat="最末頁>>"
		})
	</div>

	<div>
		第 @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) 頁，共 @pagedList.PageCount 頁。
		每頁 @pagedList.PageSize 筆資料，全部共有 @pagedList.TotalItemCount 筆資料。
	</div>
</div>



@section Scripts
	{
	<script>



		//$(".pagination li").css({
		//    "background-color": "yellow",
		//    "margin-right": "0.25em",
		//    "margin-left": "0.25em"

		//})
		//$(".pagination .active").css({ "background-color": "#ccc" })
		//$(".pagination .PagedList-skipToNext").css({ "background-color": "red" })



		$('.fc1').fancybox({
			iframe: {
				css: {
					width: '600px',
					height: '500px',

				}
			},
			afterClose: function () {
				// 關閉後重load資料
				location.reload();
			}
		});

		

		$(".order-state").on("change", function () {
			$("#SearchClick").trigger("click");
		})


		$(".deleteOrder").on("click", function () {
			let orderid = $(this).attr("id")
			console.log(orderid)
			Swal.fire({
				title: 'Are you sure?',
				text: "You won't be able to revert this!",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#3085d6',
				cancelButtonColor: '#d33',
				confirmButtonText: 'Yes, delete it!'
			}).then((result) => {
				if (result.isConfirmed) {

					$.ajax({
						type: "Delete",
						url: "https://localhost:7027/OrderDetails/Delete/"+orderid,				
						async: false
					}).done(function (data) {
						history.go(0)

					}).fail(function (err) {
						alert(err.statusText);
					})

					
					
				}
			})

		})





	</script>
}

@functions {
	public string GetStateName(int state)
	{
		string StateName = "";
		switch (state)
		{
			case 0:
				StateName = "未出貨";
				break;
			case 1:
				StateName = "已出貨";
				break;
			case 2:
				StateName = "運送中";
				break;
			case 3:
				StateName = "已簽收";
				break;
			case 4:
				StateName = "已完成";
				break;
		}
		return StateName;
	}


}




